[{"/Users/aikotakata/Documents/hackathing/src/reportWebVitals.js":"1","/Users/aikotakata/Documents/hackathing/src/App.js":"2","/Users/aikotakata/Documents/hackathing/src/index.js":"3","/Users/aikotakata/Documents/hackathing/src/JobTable.jsx":"4"},{"size":362,"mtime":1610487024619,"results":"5","hashOfConfig":"6"},{"size":474,"mtime":1610666082935,"results":"7","hashOfConfig":"6"},{"size":500,"mtime":1610487024618,"results":"8","hashOfConfig":"6"},{"size":4711,"mtime":1610670043809,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hqc1vu",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/aikotakata/Documents/hackathing/src/reportWebVitals.js",[],"/Users/aikotakata/Documents/hackathing/src/App.js",[],"/Users/aikotakata/Documents/hackathing/src/index.js",[],"/Users/aikotakata/Documents/hackathing/src/JobTable.jsx",["19","20","21","22","23","24"],"import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowUp, faArrowDown, faGripLinesVertical } from '@fortawesome/free-solid-svg-icons'\n//import { Modal } from 'bootstrap';\n//import Modal from './Modal.js';\n//import ModalHeader from 'react-bootstrap/esm/ModalHeader';\nimport ModalBody from \"react-bootstrap/ModalBody\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport ModalFooter from \"react-bootstrap/ModalFooter\";\nimport ModalTitle from \"react-bootstrap/ModalTitle\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Modal from 'react-bootstrap/Modal'\nimport { useEffect, useState } from \"react\";\nimport { Button} from 'react-bootstrap';\n\n\n\nexport default class JobTable extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            sortKey: 'hourly',\n            sortOrder: 'asc',\n            modalVisible: false,\n            modalJob: {}\n        }\n        this.jobsMaster = require('./jobs.json');\n        this.jobsFiltered = this.jobsMaster;\n        \n    }\n\n    \n    componentDidMount() {\n        this.filterJobs();\n    }\n    \n    filterJobs(){\n        this.jobsFiltered = this.jobsMaster;\n\n        this.jobsFiltered.sort((job1, job2)=>{\n            let a = job1;\n            let b = job2;\n\n            if(this.state.sortOrder==='asc'){\n                a = job2;\n                b = job1;\n            }\n\n            console.log(typeof a[this.state.sortKey]);\n            \n\n            if (typeof a[this.state.sortKey] == \"number\") {\n                return a[this.state.sortKey] - b[this.state.sortKey];\n            } else {\n                return ((a[this.state.sortKey] < b[this.state.sortKey]) ? -1 : ((a[this.state.sortKey] > b[this.state.sortKey]) ? 1 : 0));\n            }\n        });\n    }\n\n\n    toggleOrder = (key) => {\n        this.setState({\n            sortOrder: this.state.sortOrder==='desc' ? 'asc':'desc',\n            sortKey: key\n        }, \n        ()=>{\n            this.filterJobs();\n            console.log(`filtered ${this.state.sortKey} ${this.state.sortOrder}`);\n        });\n        \n    }\n\n    toggleModal = (job={}) => {\n        this.setState({\n            modalVisible: !this.state.modalVisible,\n            modalJob: job\n        });\n    }\n\n\n\n\n    render() {\n        \n        return(\n            <>\n            <Modal className = \"modal1\" show={this.state.modalVisible} onHide={this.toggleModal}>\n                <Modal.Header closeButton>\n                <Modal.Title>{this.state.modalJob.name}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <h5>\n                        {this.state.modalJob.description}\n                    </h5>\n                    <p>\n                        Contact: {this.state.modalJob.contact}\n                    </p>\n                    <p>\n                        Email: {this.state.modalJob.email}\n                    </p>\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={this.toggleModal}>\n                    Close\n                </Button>\n                </Modal.Footer>\n            </Modal>\n            <Table striped bordered hover size=\"md\" class = \"table table-hover table-striped\">\n                <thead class=\"thead-dark\">\n                    <tr>\n                        <th onClick={()=>{this.toggleOrder('name');}}>Name <FontAwesomeIcon size=\"md\" icon={this.state.sortKey==='name'? this.state.sortOrder==='asc'? faArrowDown: faArrowUp : faGripLinesVertical}/> </th>\n                        <th>Description</th>\n                        <th onClick={()=>{this.toggleOrder('hourly');}}>Pay (hourly) <FontAwesomeIcon icon={this.state.sortKey==='hourly'? this.state.sortOrder==='asc'? faArrowDown: faArrowUp : faGripLinesVertical}/></th>\n                        <th onClick={()=>{this.toggleOrder('date');}}>Date Posted <FontAwesomeIcon icon={this.state.sortKey==='date'? this.state.sortOrder==='asc'? faArrowDown: faArrowUp : faGripLinesVertical}/></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.jobsFiltered.map((job, i)=>{\n                    return(\n                        <tr class = \"success\" key={i} onClick={()=>{this.toggleModal(job)}}>\n                            <td>{job.name}</td>\n                            <td>{job.description}</td>\n                            <td>${job.hourly}</td>\n                            <td>{job.date}</td>\n                        </tr>\n                    );\n                    })}\n                </tbody>\n            </Table>\n            </>\n        );\n    }\n}",{"ruleId":"25","severity":1,"message":"26","line":8,"column":8,"nodeType":"27","messageId":"28","endLine":8,"endColumn":17},{"ruleId":"25","severity":1,"message":"29","line":9,"column":8,"nodeType":"27","messageId":"28","endLine":9,"endColumn":19},{"ruleId":"25","severity":1,"message":"30","line":10,"column":8,"nodeType":"27","messageId":"28","endLine":10,"endColumn":19},{"ruleId":"25","severity":1,"message":"31","line":11,"column":8,"nodeType":"27","messageId":"28","endLine":11,"endColumn":18},{"ruleId":"25","severity":1,"message":"32","line":14,"column":10,"nodeType":"27","messageId":"28","endLine":14,"endColumn":19},{"ruleId":"25","severity":1,"message":"33","line":14,"column":21,"nodeType":"27","messageId":"28","endLine":14,"endColumn":29},"no-unused-vars","'ModalBody' is defined but never used.","Identifier","unusedVar","'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'ModalTitle' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used."]